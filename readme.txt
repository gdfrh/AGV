"""
我想循环随机分配机器臂，将每次随机分配的结果作为解，function分别得出这种分配求得的能耗和时间，现在的问题是如何表示这个解，用编码？字典？
我现在调用任务是随机的，是否应该用固定的任务来查看配置的优先级
如果用编码的方式，那么比较容易进行最开始初始解以及第一代子代的构造，只需要变异（比如交换编码）然后提取到对应的生产单元，重新计算时间和能耗即可
字典不太好变异

1.7：接下来的问题：
1.引入时间改变状态，这里需要使用线程的方法解决，小车同理，订单同理
2.小车的变换与状态改变
3.循环套循环
4.现在订单是随机给的，是否需要修改
5.生产单元固定，是否需要修改
6.调度问题

"""


robot_arm中：
# 4. 现在回到闲置区等待小车的到来
这个会根据小车的数量来影响，所以这就是小车的因子
# wait_vga_time
而且这只能是一个一个订单的情况，如果有些订单路径不一样，那么还要考虑排队问题，等待时间会改变



我现在需要改变一下生产单元的方式：
遗传我是直接用一整个解进行交叉变异的2110000001111100001111110000000000010000011100000011111100000000000311000
按文档改变了之后，那样的话，机器臂的增减的消耗的逻辑也需要改变，不能用一个机器臂的消耗作为初始，而是要用每个生产区的最小生成机器臂数量作为初始，并且考虑增减的变化
遗传变异不能出现全0
交叉是否也要考虑？
变异中，还没考虑加，可以先sum来判断是否满足约束，如果等于总数，变异只考虑减法，如果小于总数概率考虑加减
如果全是第一前沿，也需要修改交叉的逻辑
初始化随机自身也不能重复
220000000020020020002000303000030000001000000010001000300030
300220002020000203020000300000200000000000000000000100000303
2030020000003000000320000030000000200000000000000100030303
前导0的问题：从大到小排序，或者f"{merged_number:0{total_units}d}"


1.13现在的问题：变异还没写，初始的种群不能存在相同，有时候找不到新的成员陷入死循环
思考：车可以全局使用，只需要在变异的时候修改它的值即可，一个是分布方式，一个是状态
关于交叉：如果变异后序列长短不同，那对应的个数交换是否达不到预期？
关于变异：1、如果生产单元增加或者减少，序列长短就会变化，这样交叉时就得注意范围（已解决）
        2、而且我是使用反映射到生产单元的机器臂个数的，那在修改生产单元个数后，如何反映射（不知道生产单元的修改），这样初始化的时候个数不一样如何初始化（已解决）
我的想法：2、是否可以修改一个NSGA2的计算逻辑，改成每获得一个序列，就计算目标函数；或者写一个列表来记录生产单元的个数（列表存列表，或者列表存序列），然后每一代会重置这个列表
[[3,3,3,3,3,3,3],[]]像这种的列表,其他的原初始化不变，只改变object那里的初始化逻辑，让它读取新的生产单元列表再初始化
关于调度：1、首先是订单的顺序
        2、目的确定时，空闲生产单元的选取
        3、生产区目的不定（多项选择时），生产区的选择
        4、现在忽略了从开始到第一个生产区中间的任何操作，以及最后一个生产区到结束的任何操作

2.19：
订单问题：1.订单生成：现在的订单生成是都从某一个生产区开始，经过所有生产区，没有达成某些订单只需要部分生产区并且顺序可以不同，并且订单长度不一致

是否可以生成一个任务-机器的处理时间矩阵，表示每个任务在每台机器上的处理时间，这个矩阵是已知的，将任务设置为A B C...这样随机分配任务时，就可以直接用ABC当订单

        2.多个订单的调度：如果使用调度的话，所带来的时间与工作区状态的问题手动不太行？（现在经过过一个订单，每一步操作是时间到达了就完成了，如果是多个订单怎么做）
        3.现在所计算出来的都是一个订单的时间和功率并且是用了最多机器臂情况下的结果
        4.订单之间的顺序改变
        5.时间是累加计算的(已解决)
调度问题：ALNS算法还没有实现
BUG：在NSGA2算法中有时会出现种群不足以更新下一种群

两种调度方法
1.遗传内嵌套大邻域：每获得一组部署解，就改变订单来获得最好的订单排列 √
2.大邻域内嵌套遗传：对多种订单排序确定更好的部署

关于流程顺序：考虑设计权重来表示，当所需单元忙碌则权重增加，即将它远离
要设计订单哪些是可以变化的，哪些是可破坏的（比如B-C连在一起时可破坏）
应该在什么样的条件下对订单顺序修改，什么样的条件下对工艺流程进行修改？

用权重来设置选择的哪个空闲的生产单元
我还想加一个空闲时间的功率消耗
2.27
1.如何设计订单的流程，哪些可以改变
2.后悔修复算子

3.3
1.后悔修复算子使用时若遇到了相同的订单如何设置适应值
2.现在代码跑不动，是否需要优化function
3.优化问题：可视化分配
          NSGA2里面的最后一个function是否可以不要？

          现在使用了3个function，第一个是对代种群进行交叉变异前扩充种群：：：我想只计算不ALNS优化这开始的填充种群
                              第二个是对扩充完的种群获取下一代的排序
                              第三个是每十代的输出：：：这里面是否可以直接用2里面的输出来，不用再算一遍了


3.13还是要解决一下解的多样性问题，经常跑不出来
3.14:
File "D:\AGV\robot_arm.py", line 268, in order_time_and_power
    min_unit_index, min_wait_time = self.find_min_wait_time(start_zone,'unit')
TypeError: cannot unpack non-iterable NoneType object，函数返回None，可能是time.time()的问题
需要修改一下操作的流程，现在是顺序优先级，如果一个后到的订单它先结束了某一步，会发现前面的订单占据了前面的位置，延长了等待。
但是你的所有订单选的都是最多机器臂的最快的，不可能出现后面的订单先做完，除非是流程不一样

空闲生产区的选择问题,现在是选机器臂最多的生产单元

如果机器臂是二位数，会导致储存问题特别是x0,现在的存储方式是int数字，无法判断是否是二位数，而且现在的判断方式是找0，所以二位数有问题需要限制或修改
以及对机器臂增减的参数设计（机器臂不能是多位数）

3.17：现在在修改流程
1.时间节点使用替换，可以知道是哪个订单的哪一个生产区(使用矩阵判断None),但是不知道是哪一个生产单元
2.还需要对小车的使用进行时间节点构造
3.使用矩阵按列这样计算，如果目的是同一生产区，那么优先级就不符合订单顺序（只需要改变矩阵遍历的顺序，改成先行后列即可）

3.18
1.参数设计
2.生产单元选择的权重设计
3.机器臂多位数
4.小车时间节点构造:
你得考虑起始点和结束点之间的小车的运送问题
    point_type, idx = time_line.get_next_point()
TypeError: cannot unpack non-iterable NoneType object
[-3, inf, -2, inf, inf, inf, -2, -3, -3, -3]
[(None, None, None, None), (None, None, None, None),
 (inf, '包装区', 1, 9, 2), (None, None, None, None),
 (None, None, None, None), (None, None, None, None),
 (inf, '喷漆区', 1, 7, 6), (inf, '包装区', 1, 8, 7),
 (None, None, None, None), (inf, '包装区', 1, 0, 9),
 (None, None, None, None), (None, None, None, None),
 (None, None, None, None), (None, None, None, None),
 (None, None, None, None)]
 相互死锁
 [inf, -3, inf, inf, inf, inf, inf, inf, inf, inf]
 决定简化车送到就走
    self.agv_states[obj_zone][idx_of_states] = False
IndexError: list assignment index out of range
5.交叉变异逻辑修改
6.把点画在一张图上


简化可以解决死锁?
[inf, -2, inf, inf, inf, inf, inf, inf, inf, inf]
[(None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None), (None, None, None, None)]

问题似乎是因为point的判定，没有考虑到多个相同的时间断点，所以现在似乎没有问题了
3.25
1.ALNS的订单选取问题，每一次解要在原有的订单顺序中修改

3.27
对比实验：
# 0.default
# 1.ALNS 0次迭代：直接计算对订单没有修改
# 2.ALNS 与 随机修改订单
# 3.NSGA2 与 随机修改部署
# 4.ALNS、NSGA2 与 双重随机
# 5.ALNS：后悔插入 与 贪心插入
# 6.选择空闲生产单元：权重 与 贪心选择

3.里面的随机我现在写的很有局限性，并且我的原来的算法的变异需要修改
对于删除生产单元，似乎要求是变机器臂为0，而不是直接删除掉，state不变化

小车的变异这么改似乎不太好
3.31
1.现在小车的变异我改成随机了
2.NSGA-III
3.甘特图
[[6.977349652479999, 7.907867135999998, -3, -3, -3, -3, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [6.977349652479999, 0, 0, 0, 0, 0, 0, 0, 0, 0], [6.979349652479999, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 7.907867135999998, 13.954699304959998, -3, -3, -3, -3, -3, -3, -3], [13.96422273848, 7.907867135999998, 13.954699304959998, -3, -3, -3, -3, -3, -3, -3], [13.96422273848, 7.907867135999998, 13.954699304959998, -3, -3, -3, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 7.907867135999998, 0, 0, 0, 0, 0, 0, 0, 0], [0, 7.909867135999998, 0, 0, 0, 0, 0, 0, 0, 0], [13.96422273848, -1, 13.954699304959998, 15.815734271999997, -3, -3, -3, -3, -3, -3], [13.96422273848, 14.894740222, 13.954699304959998, 15.815734271999997, -3, -3, -3, -3, -3, -3], [13.96422273848, 14.894740222, 13.954699304959998, 15.815734271999997, -3, -3, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 13.954699304959998, 0, 0, 0, 0, 0, 0, 0], [0, 0, 13.956699304959999, 0, 0, 0, 0, 0, 0, 0], [13.96422273848, 14.894740222, -1, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [13.96422273848, 14.894740222, -3, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [13.96422273848, 14.894740222, -3, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [13.96422273848, 0, 0, 0, 0, 0, 0, 0, 0, 0], [13.96722273848, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 14.894740222, 20.94909582448, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [19.1028673530498, 14.894740222, 20.94909582448, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [19.1028673530498, 14.894740222, 20.94909582448, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 14.894740222, 0, 0, 0, 0, 0, 0, 0, 0], [0, 14.899740222, 0, 0, 0, 0, 0, 0, 0, 0], [19.1028673530498, -1, 20.94909582448, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [19.1028673530498, 20.274572422, 20.94909582448, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [19.1028673530498, 20.274572422, 20.94909582448, 15.815734271999997, 20.932048957439996, -3, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 15.815734271999997, 0, 0, 0, 0, 0, 0], [0, 0, 0, 15.817734271999997, 0, 0, 0, 0, 0, 0], [19.1028673530498, 20.274572422, 20.94909582448, -1, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [19.1028673530498, 20.274572422, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [19.1028673530498, 20.274572422, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [19.1028673530498, 0, 0, 0, 0, 0, 0, 0, 0, 0], [19.1068673530498, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 20.274572422, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [35.5426073530498, 20.274572422, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [35.5426073530498, 20.274572422, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 20.274572422, 0, 0, 0, 0, 0, 0, 0, 0], [0, 20.276572421999997, 0, 0, 0, 0, 0, 0, 0, 0], [35.5426073530498, -1, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [35.5426073530498, 25.412217036569796, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [35.5426073530498, 25.412217036569796, 20.94909582448, 22.802607357999996, 20.932048957439996, 23.723601407999993, -3, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 20.932048957439996, 0, 0, 0, 0, 0], [0, 0, 0, 0, 20.934048957439995, 0, 0, 0, 0, 0], [35.5426073530498, 25.412217036569796, 20.94909582448, 22.802607357999996, -1, 23.723601407999993, 27.909398609919997, -3, -3, -3], [35.5426073530498, 25.412217036569796, 20.94909582448, 22.802607357999996, -3, 23.723601407999993, 27.909398609919997, -3, -3, -3], [35.5426073530498, 25.412217036569796, 20.94909582448, 22.802607357999996, -3, 23.723601407999993, 27.909398609919997, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 20.94909582448, 0, 0, 0, 0, 0, 0, 0], [0, 0, 20.95809582448, 0, 0, 0, 0, 0, 0, 0], [35.5426073530498, 25.412217036569796, -1, 22.802607357999996, 27.93396891048, 23.723601407999993, 27.909398609919997, -3, -3, -3], [35.5426073530498, 25.412217036569796, 29.98832002448, 22.802607357999996, 27.93396891048, 23.723601407999993, 27.909398609919997, -3, -3, -3], [35.5426073530498, 25.412217036569796, 29.98832002448, 22.802607357999996, 27.93396891048, 23.723601407999993, 27.909398609919997, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 22.802607357999996, 0, 0, 0, 0, 0, 0], [0, 0, 0, 22.807607357999995, 0, 0, 0, 0, 0, 0], [35.5426073530498, 25.412217036569796, 29.98832002448, -1, 27.93396891048, 23.723601407999993, 27.909398609919997, -3, -3, -3], [35.5426073530498, 25.412217036569796, 29.98832002448, 28.182439557999995, 27.93396891048, 23.723601407999993, 27.909398609919997, -3, -3, -3], [35.5426073530498, 25.412217036569796, 29.98832002448, 28.182439557999995, 27.93396891048, 23.723601407999993, 27.909398609919997, -3, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 23.723601407999993, 0, 0, 0, 0], [0, 0, 0, 0, 0, 23.725601407999992, 0, 0, 0, 0], [35.5426073530498, 25.412217036569796, 29.98832002448, 28.182439557999995, 27.93396891048, -1, 27.909398609919997, 31.631468543999993, -3, -3], [35.5426073530498, 25.412217036569796, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, 27.909398609919997, 31.631468543999993, -3, -3], [35.5426073530498, 25.412217036569796, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, 27.909398609919997, 31.631468543999993, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 25.412217036569796, 0, 0, 0, 0, 0, 0, 0, 0], [0, 25.418217036569796, 0, 0, 0, 0, 0, 0, 0, 0], [35.5426073530498, -1, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, 27.909398609919997, 31.631468543999993, -3, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, 27.909398609919997, 31.631468543999993, -3, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, 27.909398609919997, 31.631468543999993, -3, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 27.909398609919997, 0, 0, 0], [0, 0, 0, 0, 0, 0, 27.911398609919996, 0, 0, 0], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, -1, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, -3, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 27.93396891048, 30.710474493999993, -3, 31.631468543999993, 34.8867482624, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 27.93396891048, 0, 0, 0, 0, 0], [0, 0, 0, 0, 27.94496891048, 0, 0, 0, 0, 0], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, -1, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 28.182439557999995, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 28.182439557999995, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28.184439557999994, 0, 0, 0, 0, 0, 0], [35.5426073530498, 36.4334770365698, 29.98832002448, -1, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 33.32008417256979, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 29.98832002448, 33.32008417256979, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 29.98832002448, 0, 0, 0, 0, 0, 0, 0], [0, 0, 29.99032002448, 0, 0, 0, 0, 0, 0, 0], [35.5426073530498, 36.4334770365698, -1, 33.32008417256979, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, 30.710474493999993, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 30.710474493999993, 0, 0, 0, 0], [0, 0, 0, 0, 0, 30.717474493999994, 0, 0, 0, 0], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, -1, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, -3, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, -3, 34.91884199648, 31.631468543999993, 34.8867482624, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 31.631468543999993, 0, 0], [0, 0, 0, 0, 0, 0, 0, 31.633468543999992, 0, 0], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, -3, 34.91884199648, -1, 34.8867482624, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, 34.8867482624, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 33.32008417256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, 34.8867482624, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 33.32008417256979, 0, 0, 0, 0, 0, 0], [0, 0, 0, 33.32608417256979, 0, 0, 0, 0, 0, 0], [35.5426073530498, 36.4334770365698, 46.426060024479995, -1, 45.22746891048, -3, 34.91884199648, 38.61834162999999, 34.8867482624, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, 34.8867482624, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, 34.8867482624, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 0, 34.8867482624, 0], [0, 0, 0, 0, 0, 0, 0, 0, 34.8887482624, 0], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, -1, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, -3, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, 34.91884199648, 38.61834162999999, -3, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 34.91884199648, 0, 0, 0], [0, 0, 0, 0, 0, 0, 34.925841996479996, 0, 0, 0], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, -1, 38.61834162999999, 41.90371508248, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [35.5426073530498, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, -3, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [35.5426073530498, 0, 0, 0, 0, 0, 0, 0, 0, 0], [35.544607353049805, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [40.919439553049806, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [40.919439553049806, 36.4334770365698, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 36.4334770365698, 0, 0, 0, 0, 0, 0, 0, 0], [0, 36.4354770365698, 0, 0, 0, 0, 0, 0, 0, 0], [40.919439553049806, -1, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 38.61834162999999, 41.90371508248, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 38.61834162999999, 0, 0], [0, 0, 0, 0, 0, 0, 0, 38.62334162999999, 0, 0], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, -1, 41.90371508248, 39.53933567999999], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 39.53933567999999], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 39.53933567999999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 0, 0, 39.53933567999999], [0, 0, 0, 0, 0, 0, 0, 0, 0, 39.541335679999996], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, -1], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 46.526208765999996], [40.919439553049806, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 46.526208765999996], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [40.919439553049806, 0, 0, 0, 0, 0, 0, 0, 0, 0], [40.9234395530498, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 41.90371508248, 46.526208765999996], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 0, 41.90371508248, 0], [0, 0, 0, 0, 0, 0, 0, 0, 41.91471508248, 0], [51.9386995530498, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, -1, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 61.364715082480004, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, 42.35630837256979, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 61.364715082480004, 46.526208765999996], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 42.35630837256979, 0, 0, 0, 0, 0, 0], [0, 0, 0, 42.358308372569795, 0, 0, 0, 0, 0, 0], [51.9386995530498, -3, 46.426060024479995, -1, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 61.364715082480004, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, -3, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 61.364715082480004, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, -3, 45.22746891048, 51.9783473530498, -3, 43.99817382999999, 61.364715082480004, 46.526208765999996], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 43.99817382999999, 0, 0], [0, 0, 0, 0, 0, 0, 0, 44.000173829999994, 0, 0], [51.9386995530498, -3, 46.426060024479995, -3, 45.22746891048, 51.9783473530498, -3, -1, 61.364715082480004, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, -3, 45.22746891048, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, -3, 45.22746891048, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, 46.526208765999996], [51.9386995530498, -3, 46.426060024479995, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, 46.526208765999996], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 46.426060024479995, 0, 0, 0, 0, 0, 0, 0], [0, 0, 46.43006002447999, 0, 0, 0, 0, 0, 0, 0], [51.9386995530498, 62.86180002447999, -1, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, 46.526208765999996], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, 46.526208765999996], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, 46.526208765999996], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 0, 0, 46.526208765999996], [0, 0, 0, 0, 0, 0, 0, 0, 0, 46.529208765999996], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, -1], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, -3], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 49.13581844456979, 61.364715082480004, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 49.13581844456979, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49.14181844456979, 0, 0], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, -1, 61.364715082480004, 54.27146305913959], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [51.9386995530498, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [51.9386995530498, 0, 0, 0, 0, 0, 0, 0, 0, 0], [51.940699553049804, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [-3, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [-3, 62.86180002447999, 63.71256002447999, -3, inf, 51.9783473530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 51.9783473530498, 0, 0, 0, 0], [0, 0, 0, 0, 0, 51.9803473530498, 0, 0, 0, 0], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, -1, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 57.3551795530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 57.3551795530498, -3, 58.17204264456979, 61.364715082480004, 54.27146305913959], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 0, 0, 54.27146305913959], [0, 0, 0, 0, 0, 0, 0, 0, 0, 54.279463059139594], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 57.3551795530498, -3, 58.17204264456979, 61.364715082480004, -1], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 57.3551795530498, -3, 58.17204264456979, 61.364715082480004, -3], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 57.3551795530498, -3, 58.17204264456979, 61.364715082480004, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 57.3551795530498, 0, 0, 0, 0], [0, 0, 0, 0, 0, 57.3591795530498, 0, 0, 0, 0], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, -1, -3, 58.17204264456979, 61.364715082480004, -3], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, -3, 58.17204264456979, 61.364715082480004, -3], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, -3, 58.17204264456979, 61.364715082480004, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 58.17204264456979, 0, 0], [0, 0, 0, 0, 0, 0, 0, 58.174042644569795, 0, 0], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, -3, -1, 61.364715082480004, -3], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, -3, -3, 61.364715082480004, -3], [-3, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, -3, -3, 61.364715082480004, -3], [80.81471508248, 62.86180002447999, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, -3, -3, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 62.86180002447999, 0, 0, 0, 0, 0, 0, 0, 0], [0, 62.86580002447999, 0, 0, 0, 0, 0, 0, 0, 0], [80.81471508248, -1, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, 79.29754002447999, -3, inf, -3], [80.81471508248, -3, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, 79.29754002447999, -3, inf, -3], [80.81471508248, -3, 63.71256002447999, 68.4140873530498, inf, 68.3744395530498, 79.29754002447999, -3, inf, -3], [80.81471508248, 80.99506002447998, inf, 68.4140873530498, inf, 68.3744395530498, 79.29754002447999, -3, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 68.3744395530498, 0, 0, 0, 0], [0, 0, 0, 0, 0, 68.3804395530498, 0, 0, 0, 0], [80.81471508248, 80.99506002447998, inf, 68.4140873530498, inf, -1, 79.29754002447999, -3, inf, -3], [80.81471508248, 80.99506002447998, inf, 68.4140873530498, inf, 73.5160841676196, 79.29754002447999, -3, inf, -3], [80.81471508248, 80.99506002447998, inf, 68.4140873530498, inf, 73.5160841676196, 79.29754002447999, -3, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 68.4140873530498, 0, 0, 0, 0, 0, 0], [0, 0, 0, 68.4180873530498, 0, 0, 0, 0, 0, 0], [80.81471508248, 80.99506002447998, inf, -1, inf, 73.5160841676196, 79.29754002447999, 84.84982735304979, inf, -3], [80.81471508248, 80.99506002447998, inf, -3, inf, 73.5160841676196, 79.29754002447999, 84.84982735304979, inf, -3], [80.81471508248, 80.99506002447998, inf, -3, inf, 73.5160841676196, 79.29754002447999, 84.84982735304979, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 73.5160841676196, 0, 0, 0, 0], [0, 0, 0, 0, 0, 73.52408416761959, 0, 0, 0, 0], [80.81471508248, 80.99506002447998, inf, -3, inf, -1, 79.29754002447999, 84.84982735304979, inf, -3], [80.81471508248, 80.99506002447998, inf, -3, inf, -3, 79.29754002447999, 84.84982735304979, inf, -3], [80.81471508248, 80.99506002447998, inf, -3, inf, -3, 79.29754002447999, 84.84982735304979, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 79.29754002447999, 0, 0, 0], [0, 0, 0, 0, 0, 0, 79.29954002447998, 0, 0, 0], [80.81471508248, 80.99506002447998, inf, -3, inf, -3, -1, 84.84982735304979, inf, -3], [80.81471508248, 80.99506002447998, inf, -3, inf, -3, 88.32976422447999, 84.84982735304979, inf, -3], [80.81471508248, 80.99506002447998, inf, -3, inf, -3, 88.32976422447999, 84.84982735304979, inf, -3], [inf, 80.99506002447998, inf, 100.26471508248001, inf, -3, 88.32976422447999, 84.84982735304979, inf, -3], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, 88.32976422447999, 84.84982735304979, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 0, 84.84982735304979, 0, 0], [0, 0, 0, 0, 0, 0, 0, 84.8538273530498, 0, 0], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, 88.32976422447999, -1, inf, -3], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, 88.32976422447999, -3, inf, -3], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, 88.32976422447999, -3, inf, -3], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf], [0, 0, 0, 0, 0, 0, 88.32976422447999, 0, 0, 0], [0, 0, 0, 0, 0, 0, 88.33176422447998, 0, 0, 0], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, -1, -3, inf, -3], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, -3, -3, inf, -3], [inf, inf, inf, 100.26471508248001, inf, 98.27756002447998, -3, -3, inf, -3], [inf, inf, inf, 100.26471508248001, inf, inf, 115.56006002447998, -3, inf, -3], [inf, inf, inf, inf, inf, inf, 115.56006002447998, 119.71471508248001, inf, -3], [inf, inf, inf, inf, inf, inf, inf, 119.71471508248001, inf, 132.84256002447998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, 132.84256002447998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]]

有小车，小车运输-1开始-结束√
不存在空闲小车 ，-2，开始
-3 开始-结束√
第一次处理生产单元开始-结束√

[-3, 0, 7.907867135999998, -1, 7.907867135999998, 7.927867135999998, -3, 7.927867135999998, -1, 14.178337180179998, 14.208337180179997, -3, 14.208337180179997, 20.361297380179998, 20.361297380179998, -1, 20.361297380179998, 20.401297380179997, -3, 20.401297380179997, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, 36.83703738017999, -1, 36.83703738017999, 36.857037380179996, -3, 36.857037380179996, 42.231869580179996, 42.231869580179996, 42.231869580179996, 42.231869580179996, 42.231869580179996, 42.231869580179996, -1, 42.231869580179996, 42.271869580179995, -3, 42.271869580179995, -3, -3, -3, -3, -3, 48.79979726853999, 48.79979726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, 59.81505726853999, -1, 59.81505726853999, 59.83505726853999, -3, 59.83505726853999, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, 77.11755726854, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]

4.1:
1.使用轮盘赌对ALNS的多种算子参数分析以及贪心对比
去掉任意一种除随机算子以外的算子所得到的结果，制作成表格。呈现最优值、平均值、方差。（这个可能并不能出理想结果，适当润色）(√)

2.完成机器臂数量、订单数量、订单种类对比(√)
3.订单与小车的甘特图，订单似乎在处理生产区时我们加入-4作为参考，完成就减去，会不会好一些
小车的甘特图画完了，但是我没有设计离开车间的问题，所以最后一个生产区小车没用到,我们可以就将配置区作为离开区,或者直接不给配置区分配小车就行了（√）
4.NSGA3不想做了（√）

4.3：
1.订单和生产区的甘特图(订单的甘特图完成，-3的显示似乎存在问题)(√)
2.贪心插入比后悔插入效果好(将破坏比例调大一点试一试)

4.4
1.贪心插入比后悔插入效果好(将破坏比例调大一点试一试)
2.生产区的甘特图
3.小车数量对应似乎出错了
[7.907867135999998, (9.907867135999998, '铸造区', 1, 0), (11.907867135999998, '组装区', -1, 0), 15.815734271999997, (17.815734271999997, '铸造区', 1, 2), (19.815734271999997, '组装区', -1, 2)]
[]
[7.907867135999998, (9.907867135999998, '铸造区', 1, 1), (11.907867135999998, '组装区', -1, 1), 15.815734271999997, (17.815734271999997, '铸造区', 1, 3), (19.815734271999997, '组装区', -1, 3), 23.723601407999993, (25.723601407999993, '铸造区', 1, 4), (27.723601407999993, '组装区', -1, 4)]
[16.892740222, (27.892740222, '配置区', 1, 0), (38.892740222, '铸造区', -1, 0), 38.892740222, (48.892740222, '铸造区', -1, 1), 48.892740222, (57.892740222, '喷漆区', 1, 2), (66.892740222, '铸造区', -1, 2), 66.892740222, (71.892740222, '包装区', 1, 3), (76.892740222, '铸造区', -1, 3), 76.892740222, (81.892740222, '包装区', 1, 4), (86.892740222, '铸造区', -1, 4)]
Traceback (most recent call last):
  File "D:\AGV\picture.py", line 59, in <module>
    return_end = filtered_clean[j + 2][0]
TypeError: 'float' object is not subscriptable
[2, 3, 2, 5, 1, 2]--[3,2,2,(1,2),,3]

4.7
1.生产区的甘特图(√)
2.小车数量对应似乎出错了/生产区也对不上
3.帕累托解的图
4.ALNS的迭代
