"""
我想循环随机分配机器臂，将每次随机分配的结果作为解，function分别得出这种分配求得的能耗和时间，现在的问题是如何表示这个解，用编码？字典？
我现在调用任务是随机的，是否应该用固定的任务来查看配置的优先级
如果用编码的方式，那么比较容易进行最开始初始解以及第一代子代的构造，只需要变异（比如交换编码）然后提取到对应的生产单元，重新计算时间和能耗即可
字典不太好变异

1.7：接下来的问题：
1.引入时间改变状态，这里需要使用线程的方法解决，小车同理，订单同理
2.小车的变换与状态改变
3.循环套循环
4.现在订单是随机给的，是否需要修改
5.生产单元固定，是否需要修改
6.调度问题

"""


robot_arm中：
# 4. 现在回到闲置区等待小车的到来
这个会根据小车的数量来影响，所以这就是小车的因子
# wait_vga_time
而且这只能是一个一个订单的情况，如果有些订单路径不一样，那么还要考虑排队问题，等待时间会改变



我现在需要改变一下生产单元的方式：
遗传我是直接用一整个解进行交叉变异的2110000001111100001111110000000000010000011100000011111100000000000311000
按文档改变了之后，那样的话，机器臂的增减的消耗的逻辑也需要改变，不能用一个机器臂的消耗作为初始，而是要用每个生产区的最小生成机器臂数量作为初始，并且考虑增减的变化
遗传变异不能出现全0
交叉是否也要考虑？
变异中，还没考虑加，可以先sum来判断是否满足约束，如果等于总数，变异只考虑减法，如果小于总数概率考虑加减
如果全是第一前沿，也需要修改交叉的逻辑
初始化随机自身也不能重复
220000000020020020002000303000030000001000000010001000300030
300220002020000203020000300000200000000000000000000100000303
2030020000003000000320000030000000200000000000000100030303
前导0的问题：从大到小排序，或者f"{merged_number:0{total_units}d}"


1.13现在的问题：变异还没写，初始的种群不能存在相同，有时候找不到新的成员陷入死循环
思考：车可以全局使用，只需要在变异的时候修改它的值即可，一个是分布方式，一个是状态
关于交叉：如果变异后序列长短不同，那对应的个数交换是否达不到预期？
关于变异：1、如果生产单元增加或者减少，序列长短就会变化，这样交叉时就得注意范围（已解决）
        2、而且我是使用反映射到生产单元的机器臂个数的，那在修改生产单元个数后，如何反映射（不知道生产单元的修改），这样初始化的时候个数不一样如何初始化（已解决）
我的想法：2、是否可以修改一个NSGA2的计算逻辑，改成每获得一个序列，就计算目标函数；或者写一个列表来记录生产单元的个数（列表存列表，或者列表存序列），然后每一代会重置这个列表
[[3,3,3,3,3,3,3],[]]像这种的列表,其他的原初始化不变，只改变object那里的初始化逻辑，让它读取新的生产单元列表再初始化
关于调度：1、首先是订单的顺序
        2、目的确定时，空闲生产单元的选取
        3、生产区目的不定（多项选择时），生产区的选择

